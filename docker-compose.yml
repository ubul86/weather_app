version: '3.7'

services:
    soketi:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        container_name: weather_soketi
        environment:
            SOKETI_DEBUG: ${SOKETI_DEBUG:-1}
            SOKETI_METRICS_SERVER_PORT: 9601
            SOKETI_DEFAULT_APP_ID: ${PUSHER_APP_ID}
            SOKETI_DEFAULT_APP_KEY: ${PUSHER_APP_KEY}
            SOKETI_DEFAULT_APP_SECRET: ${PUSHER_APP_SECRET}
        ports:
            - ${PUSHER_PORT:-6001}:6001
            - ${PUSHER_METRICS_PORT:-9601}:9601
        networks:
            - app-network
    nginx:
        image: nginx:1.17.4
        container_name: weather_nginx
        restart: unless-stopped
        ports:
            - ${NGINX_PORT}:80
        volumes:
            - ./docker_settings/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./docker_settings/logs:/var/log/nginx
            - ./:/var/www/html
        depends_on:
            - php
            - soketi
        networks:
            - app-network

    php:
        build:
            context: ./docker_settings
            dockerfile: Dockerfile_php81
        container_name: weather_php
        restart: unless-stopped
        volumes:
            - ./:/var/www/html
            - ./php.ini:/usr/local/etc/php/conf.d/php-memory-limit.ini
        depends_on:
            - mysql
        networks:
            - app-network

    php-cli-cron:
        build:
            context: ./docker_settings
            dockerfile: Dockerfile_cron
        container_name: weather_php_cli_cron
        volumes:
            - ./:/var/www/html
        depends_on:
            - php
            - redis
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: weather_redis
        restart: unless-stopped
        networks:
            - app-network

    mysql:
        image: mysql:5.7
        restart: unless-stopped
        container_name: weather_mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            TZ: Europe/Budapest
            LANG: C.UTF_8
            MYSQL_CHARSET: utf8mb4
            MYSQL_COLLATION: utf8mb4_unicode_ci
        ports:
            - "33063:3306"
        volumes:
            - ./docker_settings/mysql_data:/var/lib/mysql
        networks:
            - app-network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        restart: unless-stopped
        container_name: weather_phpmyadmin
        ports:
            - ${PHPMYADMIN_PORT}:80
        environment:
            PMA_HOST: mysql
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
            UPLOAD_LIMIT: 1000M
        depends_on:
            - mysql
        networks:
            - app-network

    node:
        build:
            context: .
            dockerfile: docker_settings/Dockerfile_node
        container_name: weather_node
        volumes:
            - './:/www/local'
        restart: always
        ports:
            - 8085:8080
        working_dir: /www/local
        networks:
            - app-network

    mailhog:
        image: mailhog/mailhog
        restart: unless-stopped
        container_name: weather_mailhog
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
    web:
        external: true

volumes:
    mysql_data:
        driver: local
